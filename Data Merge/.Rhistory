View(newdata)
autoplot(tsShortAlt[, "PB_Nac"]) +
ylab("% change in US consumption") +
autolayer(fcast.up, PI = TRUE, series = "increase") +
autolayer(fcast.down, PI = TRUE, series = "decrease") +
guides(colour = guide_legend(title = "Scenario"))
autolayer(fcast.up, PI = TRUE, series = "increase")
autolayer(fcast.down, PI = TRUE, series = "decrease")
guides(colour = guide_legend(title = "Scenario"))
h <- 100
newdata <- data.frame(
APORTESM3 = rep(0.5, h),
HIDRAULICA = rep(0.5, h),
TERMICA = rep(1, h),
Demanda = rep(1, h))
fcast.up <- forecast(fit.PB, newdata = newdata)
newdata <- data.frame(
APORTESM3 = rep(-1, h),
HIDRAULICA = rep(-0.5, h),
TERMICA = rep(0, h),
Demanda = rep(0.5,h))
fcast.down <- forecast(fit.PB, newdata = newdata)
autoplot(tsShortAlt[, "PB_Nac"]) +
ylab("% change in US consumption") +
autolayer(fcast.up, PI = TRUE, series = "increase") +
autolayer(fcast.down, PI = TRUE, series = "decrease") +
guides(colour = guide_legend(title = "Scenario"))
fcast <- forecast(fit.PB, h=48)
autoplot(fcast) +
ggtitle("Forecasts of energy demand") +
xlab("Year") + ylab("kWh")
fcast <- forecast(fit.PB, h=48)
bannerCommenter::block("Holi")
bannerCommenter::boxup("Holi")
bannerCommenter::banner("Holi")
bannerCommenter::section("HOLI")
bannerCommenter::section("TIME SERIES DECOMPOSITION")
autoplot(tsEE[,"PB_Nac"], series="Data") +
autolayer(ma(tsEE[,"PB_Nac"],24), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","5-MA"="red"),
breaks=c("Data","5-MA"))
ma(tsEE[,"PB_Nac"],24)
autoplot(tsEE[,"PB_Nac"], series="Data") +
autolayer(ma(tsEE[,"PB_Nac"],24), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","5-MA"="red"),
breaks=c("Data","5-MA"))
autoplot(ma(tsEE[,"PB_Nac"],24), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","5-MA"="red"),
breaks=c("Data","5-MA"))
24*365
autoplot(ma(tsEE[,"PB_Nac"],8760), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","5-MA"="red"),
breaks=c("Data","5-MA"))
autoplot(tsEE[,"PB_Nac"], series="Data") +
autolayer(ma(tsEE[,"PB_Nac"],8760), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","5-MA"="red"),
breaks=c("Data","5-MA"))
ma(tsEE[,"PB_Nac"],8760)
autoplot(tsShort[,"PB_Nac"], series="Data") +
autolayer(ma(tsShort[,"PB_Nac"],24), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","5-MA"="red"),
breaks=c("Data","5-MA"))
autoplot(elecsales, series="Data") +
autolayer(ma(elecsales,5), series="5-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","5-MA"="red"),
breaks=c("Data","5-MA"))
autoplot(tsShort[,"PB_Nac"], series="Data") +
autolayer(ma(tsShort[,"PB_Nac"],24), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","5-MA"="red"),
breaks=c("Data","5-MA"))
autoplot(tsShortAlt[,"PB_Nac"], series="Data") +
autolayer(ma(tsShort[,"PB_Nac"],24), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","5-MA"="red"),
breaks=c("Data","5-MA"))
autoplot(tsShortA[,"PB_Nac"], series="Data") +
autolayer(ma(tsShort[,"PB_Nac"],24), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","5-MA"))
autoplot(tsShort[,"PB_Nac"], series="Data") +
autolayer(ma(tsShort[,"PB_Nac"],24), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","5-MA"))
autoplot(tsShort[,"PB_Nac"], series="Data") +
autolayer(ma(tsShort[,"PB_Nac"],24), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","24-MA"))
24*30
autoplot(tsShort[,"PB_Nac"], series="Data") +
autolayer(ma(tsShort[,"PB_Nac"],720), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","24-MA"))
autoplot(tsEE[,"PB_Nac"], series="Data") +
autolayer(ma(tsEE[,"PB_Nac"],720), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","24-MA"))
autolayer(ma(tsEE[,"PB_Nac"],720), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","24-MA"))
autoplot(tsEE[,"PB_Nac"], series="Data") +
autoplot(ma(tsEE[,"PB_Nac"],720), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","24-MA"))
autoplot(ma(tsEE[,"PB_Nac"],720), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Annual electricity sales: South Australia") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","24-MA"))
720*6
autoplot(ma(tsEE[,"PB_Nac"],4320), series="24-MA") +
xlab("Year") + ylab("GWh") +
ggtitle("Price of the energy [$]") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","24-MA"))
autoplot(tsEE[,"PB_Nac"], series="Data") +
autolayer(ma(tsEE[,"PB_Nac"],720), series="24-MA") +
xlab("Year") + ylab("price [kWh]") +
ggtitle("Price of the energy [$]") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","24-MA"))
autoplot(tsEE[,"PB_Nac"], series="Data") +
autolayer(ma(tsEE[,"PB_Nac"],720), series="24-MA",size=1.2) +
xlab("Year") + ylab("price [kWh]") +
ggtitle("Price of the energy [$]") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","24-MA"))
autoplot(tsEE[,"Demanda"], series="Data") +
autolayer(ma(tsEE[,"Demanda"],720), series="24-MA",size=1.2) +
xlab("Year") + ylab("price [$/kWh]") +
ggtitle("Demand of energy [$]") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","24-MA"))
autoplot(tsEE[,"Demanda"], series="Data") +
autolayer(ma(tsEE[,"Demanda"],24), series="24-MA",size=1.2) +
xlab("Year") + ylab("price [$/kWh]") +
ggtitle("Demand of energy [$]") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","24-MA"))
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Demanda, colour = "Demand"),size=1.2)+
geom_line(aes(y = Oferta ,colour = "Offer"),size=0.8)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Demand of energy hourly[kWh]", y = "Energy [kWh]")
ggAcf(tsShort[,"Demanda"], lag=24)
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Oferta ,colour = "OFFER"),size=1)+
geom_line(aes(y = EOLICA, colour = "EOLIC"),size=1)+
geom_line(aes(y = HIDRAULICA ,colour = "HYDROELECTRIC"),size=1)+
geom_line(aes(y = TERMICA, colour = "TERMIC"),size=1)+
geom_line(aes(y = SOLAR ,colour = "SOLAR"),size=1)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Sources of energy hourly[kWh]", y = "Energy [kWh]")
ggplot(data=LongTime,aes(x=DateTime, y=PB_Nac)) +
geom_path(colour="#009E73",size=0.5) +
labs(title = "Price of the energy [$/kWh]", x = "", y = "Price [$/kwh]", color = "Legend Title\n")+ scale_y_continuous(  labels = scales::number_format( big.mark = ','))
#https://www.eltiempo.com/archivo/documento/CMS-16610226
#https://stdrupal01.blob.core.windows.net/temporalportalxm/Boletin_787897.pdf?sig=qDw9PIjzFTlbg%2B3uheoqQ62DvGIwN24PelKF3dHudys%3D&st=2022-01-05T04%3A04%3A45Z&se=2022-01-05T04%3A06%3A45Z&sv=2019-02-02&sp=r&sr=c
#https://stdrupal01.blob.core.windows.net/temporalportalxm/Boletin_768225.pdf?sig=N9xAn64MbVxiHJlwnhj3Zt%2BeBHXcyAFLQhkhDOHKchY%3D&st=2022-01-05T04%3A06%3A20Z&se=2022-01-05T04%3A08%3A20Z&sv=2019-02-02&sp=r&sr=c
#https://stdrupal01.blob.core.windows.net/temporalportalxm/Boletin_771117.pdf?sig=O5X8K0csfAKbIdqssdN4AcjBIcCdZA19Rclu5IBhDDo%3D&st=2022-01-05T04%3A13%3A54Z&se=2022-01-05T04%3A15%3A54Z&sv=2019-02-02&sp=r&sr=c
autoplot(tsShort[,c("PB_Nac","TERMICA","ReservasM3","APORTESM3")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
scale_y_continuous(  labels = scales::number_format( big.mark = ','))+
ggtitle("Price of electricity, Water Reserves, Termic production")
qplot(TERMICA, PB_Nac, data=as.data.frame(tsShort)) +
xlab("Termic ENERGY[kWh]") + ylab("Price of Electricity") #ME GUSTA
qplot(ReservasM3, PB_Nac, data=as.data.frame(tsShort)) +
xlab("Water Reserves[kWh]") + ylab("Price of Electricity") #Casi no me gusta
qplot(APORTESM3, PB_Nac, data=as.data.frame(tsShort)) +
xlab("Aportes[m3]") + ylab("Price of Electricity") #ME GUSTA
#AUTOCORRELATION
ggAcf(tsShort[,"PB_Nac"])
tsShort %>%
as.data.frame() %>%
ggplot(aes(x=TERMICA, y=PB_Nac)) +
ylab("Consumption (quarterly % change)") +
xlab("Income (quarterly % change)") +
geom_point() +
geom_smooth(method="lm", se=FALSE)
ggAcf(tsShort[,"Demanda"], lag=24)
tsEE %>%
as.data.frame() %>%
ggplot(aes(x=DateTime, y=PB_Nac)) +
ylab("Consumption (quarterly % change)") +
xlab("Income (quarterly % change)") +
geom_point() +
geom_smooth(method="lm", se=FALSE)
tsEE %>%
as.data.frame() %>%
ggplot(aes(x=DateTime, y=Demanda)) +
ylab("Consumption (quarterly % change)") +
xlab("Income (quarterly % change)") +
geom_line() +
geom_smooth(method="lm", se=FALSE)
tsEE %>%
as.data.frame() %>%
ggplot(aes(x=DateTime, y=Demanda)) +
ylab("Demand [kWh]") +
xlab("Year") +
geom_line() +
geom_smooth(method="lm", se=FALSE)
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Demanda, colour = "Demand"),size=1.2)+
geom_line(aes(y = Oferta ,colour = "Offer"),size=0.8)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Demand of energy hourly[kWh]", y = "Energy [kWh]")
tsEE %>%
as.data.frame() %>%
ggplot(aes(x=DateTime)) +
ylab("Demand [kWh]") +
xlab("Year") +
geom_line(y=Demanda, colour = "Demand", size = 1.2) +
geom_smooth(method="lm", se=FALSE)
tsEE %>%
as.data.frame() %>%
ggplot(aes(x=DateTime)) +
ylab("Demand [kWh]") +
xlab("Year") +
geom_line(aes(y=Demanda, colour = "Demand"), size = 1.2) +
geom_smooth(method="lm", se=FALSE)
tsEE %>%
as.data.frame() %>%
ggplot(aes(x=DateTime)) +
geom_line(aes(y=Demanda, colour = "Demand"), size = 1.2) +
ylab("Demand [kWh]") +
xlab("Year") +
geom_smooth(method="lm", se=FALSE)
ggplot(tsEE, aes(DateTime))+
geom_line(aes(y = Demanda, colour = "Demand"),size=1.2)+
geom_smooth(method="lm", se=FALSE)
ggplot(tsEE, aes(DateTime))+
geom_line(aes(y = Demanda, colour = "Demand"),size=1.2)+
geom_smooth(method="lm", se=FALSE)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Demand of energy hourly[kWh]", y = "Energy [kWh]")
tsEE %>%
as.data.frame() %>%
ggplot(aes(x=DateTime, y=Demanda)) +
ylab("Demand [kWh]") +
xlab("Year") +
geom_line() +
geom_smooth(method="lm", se=FALSE)
#Moving Averages podria servir para mostrar el valor del precio de la electricidad mas claramente
#Solo dejando la linea roja
autoplot(tsEE[,"PB_Nac"], series="Data") +
autolayer(ma(tsEE[,"PB_Nac"],720), series="24-MA",size=1.2) +
xlab("Year") + ylab("price [$/kWh]") +
ggtitle("Price of the energy [$]") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","24-MA"))
tsShort %>% decompose(type="multiplicative") %>%
autoplot() + xlab("Year") +
ggtitle("Classical multiplicative decomposition
of electrical equipment index")
elecequip
tsShort[."PB_Nac"] %>% decompose(type="multiplicative") %>%
autoplot() + xlab("Year") +
ggtitle("Classical multiplicative decomposition
of electrical equipment index")
tsShort[,"PB_Nac"] %>% decompose(type="multiplicative") %>%
autoplot() + xlab("Year") +
ggtitle("Classical multiplicative decomposition
of electrical equipment index")
tsSeasonal[,"PB_Nac"] %>% decompose(type="multiplicative") %>%
autoplot() + xlab("Year") +
ggtitle("Classical multiplicative decomposition
of electrical equipment index")
tsEE[,"PB_Nac"] %>% decompose(type="multiplicative") %>%
autoplot() + xlab("Year") +
ggtitle("Classical multiplicative decomposition
of electrical equipment index")
tsDecomposition <- window(tsEE, 2015,2020)
tsDecomposition[,"PB_Nac"] %>% decompose(type="multiplicative") %>%
autoplot() + xlab("Year") +
ggtitle("Classical multiplicative decomposition
of electrical equipment index")
tsDecomposition[,"Demanda"] %>% decompose(type="multiplicative") %>%
autoplot() + xlab("Year") +
ggtitle("Classical multiplicative decomposition
of electrical equipment index")
tsDecomposition <- window(tsEE, 2015,2018)
tsDecomposition[,"Demanda"] %>% decompose(type="multiplicative") %>%
autoplot() + xlab("Year") +
ggtitle("Classical multiplicative decomposition
of electrical equipment index")
library(seasonal)
install.packages("seasonal")
library(seasonal)
autoplot(tsDecomposition[,"Demanda"], series="Data") +
autolayer(trendcycle(fit), series="Trend") +
autolayer(seasadj(fit), series="Seasonally Adjusted") +
xlab("Year") + ylab("New orders index") +
ggtitle("Electrical equipment manufacturing (Euro area)") +
scale_colour_manual(values=c("gray","blue","red"),
breaks=c("Data","Seasonally Adjusted","Trend"))
autoplot(fit) +
ggtitle("X11 decomposition of electrical equipment index")
elecequip %>% seas(x11="") -> fit
tsDecomposition[,"Demanda"] %>% seas(x11="") -> fit
tsSeasonal %>% seas(x11="") -> fit
tsSeasonal
tsSeasonal %>% seas(x11="") -> fit
autoplot(fit) +
ggtitle("X11 decomposition of electrical equipment index")
#Moving Averages podria servir para mostrar el valor del precio de la electricidad mas claramente
#Solo dejando la linea roja
autoplot(tsEE[,"PB_Nac"], series="Data") +
autolayer(ma(tsEE[,"PB_Nac"],720), series="24-MA",size=1.2) +
xlab("Year") + ylab("price [$/kWh]") +
ggtitle("Price of the energy [$]") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","24-MA"))
tsDecomposition[,"Demanda"] %>% decompose(type="multiplicative") %>%
autoplot() + xlab("Year") +
ggtitle("Classical multiplicative decomposition
of electrical equipment index")
fit <- stl(tsDecomposition[,"Demanda"], t.window=13, s.window="periodic",
robust=TRUE)
fit %>% seasadj() %>% naive() %>%
autoplot() + ylab("New orders index") +
ggtitle("Naive forecasts of seasonally adjusted data")
fit
fit <- stl(tsShort[,"Demanda"], t.window=13, s.window="periodic",
robust=TRUE)
fit <- stl(tsSeasonal, t.window=13, s.window="periodic",
robust=TRUE)
fit %>% seasadj() %>% naive() %>%
autoplot() + ylab("New orders index") +
ggtitle("Naive forecasts of seasonally adjusted data")
fit.Dem <- tslm(tsSeasonal~ trend + season)
summary(fit.Dem)
autoplot(tsSeasonal, series="Data") +
autolayer(fitted(fit.Dem), series="Fitted") +
xlab("Year") + ylab("Megalitres") +
ggtitle("Quarterly Beer Production")
fit <- stl(tsSeasonal, t.window=48, s.window="periodic",
robust=TRUE)
fit %>% seasadj() %>% naive() %>%
autoplot() + ylab("New orders index") +
ggtitle("Naive forecasts of seasonally adjusted data")
fit %>% forecast(method="naive") %>%
autoplot() + ylab("New orders index")
bannerCommenter::section("ARIMA")
fit <- auto.arima(tsShort[,"PB_Nac"], seasonal=FALSE)
fit
fit
fit %>% forecast(h=10) %>% autoplot(include=80)
fit %>% forecast(h=24) %>% autoplot(include=80)
View(tsShort)
ggAcf(tsShort[,"PB_Nac"])
fit2 <- Arima(uschange[,"Consumption"], order=c(3,0,0)))
fit2
fit2 <- Arima(tsShort[,"PB_Nac"], order=c(3,0,0)))
fit2 <- Arima(tsShort[,"PB_Nac"], order=c(3,0,0))
fit2
autoplot(fcast) +
ggtitle("Forecasts of energy demand") +
xlab("Year") + ylab("kWh")
autoplot(tsSeasonal, series="Data") +
autolayer(fitted(fit.Dem), series="Fitted") +
xlab("Year") + ylab("Megalitres") +
ggtitle("Quarterly Beer Production")
checkresiduals(fit.PB)
df <- as.data.frame(tsShortAlt)
df[,"Residuals"]  <- as.numeric(residuals(fit.PB))
p1 <- ggplot(df, aes(x=APORTESM3, y=Residuals)) +
geom_point()
p2 <- ggplot(df, aes(x=HIDRAULICA, y=Residuals)) +
geom_point()
p3 <- ggplot(df, aes(x=TERMICA, y=Residuals)) +
geom_point()
p4 <- ggplot(df, aes(x=Demanda, y=Residuals)) +
geom_point()
gridExtra::grid.arrange(p1, p2, p3, p4, nrow=2)
cbind(Data = tsShortAlt[,'PB_Nac'],
Fitted = fitted(fit.PB)) %>%
as.data.frame() %>%
ggplot(aes(x=Data, y=Fitted)) +
geom_point() +
ylab("Fitted (predicted values)") +
xlab("Data (actual values)") +
ggtitle("Price of Electricity") +
geom_abline(intercept=0, slope=1) #No me gusta
autoplot(tsShortAlt[,'PB_Nac'], series="Data") +
autolayer(fitted(fit.PB), series="Fitted") +
xlab("Year") + ylab("") +
ggtitle("Price of Electricity") +
guides(colour=guide_legend(title=" "))
tsShort %>%
as.data.frame() %>%
ggplot(aes(x=HIDRAULICA, y=PB_Nac)) +
ylab("Consumption (quarterly % change)") +
xlab("Income (quarterly % change)") +
geom_point() +
geom_smooth(method="lm", se=FALSE)
tsShort %>%
as.data.frame() %>%
ggplot(aes(x=TERMICA, y=PB_Nac)) +
ylab("Consumption (quarterly % change)") +
xlab("Income (quarterly % change)") +
geom_point() +
geom_smooth(method="lm", se=FALSE)
autoplot(tsShortAlt[,'PB_Nac'], series="Data") +
autolayer(fitted(fit.PB), series="Fitted") +
xlab("Year") + ylab("") +
ggtitle("Price of Electricity") +
guides(colour=guide_legend(title=" "))
cbind(Data = tsShortAlt[,'PB_Nac'],
Fitted = fitted(fit.PB)) %>%
as.data.frame() %>%
ggplot(aes(x=Data, y=Fitted)) +
geom_point() +
ylab("Fitted (predicted values)") +
xlab("Data (actual values)") +
ggtitle("Price of Electricity") +
geom_abline(intercept=0, slope=1) #No me gusta
CV(fit.PB)
checkresiduals(fit.PB)
df <- as.data.frame(tsShortAlt)
df[,"Residuals"]  <- as.numeric(residuals(fit.PB))
p1 <- ggplot(df, aes(x=APORTESM3, y=Residuals)) +
geom_point()
p2 <- ggplot(df, aes(x=HIDRAULICA, y=Residuals)) +
geom_point()
p3 <- ggplot(df, aes(x=TERMICA, y=Residuals)) +
geom_point()
p4 <- ggplot(df, aes(x=Demanda, y=Residuals)) +
geom_point()
gridExtra::grid.arrange(p1, p2, p3, p4, nrow=2)
fit.Dem <- tslm(tsSeasonal~ trend + season)
summary(fit.Dem)
autoplot(tsSeasonal, series="Data") +
autolayer(fitted(fit.Dem), series="Fitted") +
xlab("Year") + ylab("Megalitres") +
ggtitle("Quarterly Beer Production")
#Moving Averages podria servir para mostrar el valor del precio de la electricidad mas claramente
#Solo dejando la linea roja
autoplot(tsEE[,"PB_Nac"], series="Data") +
autolayer(ma(tsEE[,"PB_Nac"],720), series="24-MA",size=1.2) +
xlab("Year") + ylab("price [$/kWh]") +
ggtitle("Price of the energy [$]") +
scale_colour_manual(values=c("Data"="grey50","24-MA"="red"),
breaks=c("Data","24-MA"))
tsDecomposition[,"Demanda"] %>% decompose(type="multiplicative") %>%
autoplot() + xlab("Year") +
ggtitle("Classical multiplicative decomposition
of electrical equipment index")
####CON ESTO PODEMOS DEMOSTRAR si es SEASONAL la demanda mientras que el precio no lo es.
tsSeasonal[,"Demanda"] %>% decompose(type="multiplicative") %>%
autoplot() + xlab("Year") +
ggtitle("Classical multiplicative decomposition
of electrical equipment index")
####CON ESTO PODEMOS DEMOSTRAR si es SEASONAL la demanda mientras que el precio no lo es.
tsSeasonal %>% decompose(type="multiplicative") %>%
autoplot() + xlab("Year") +
ggtitle("Classical multiplicative decomposition
of electrical equipment index")
fit3 <- auto.arima(tsShort[,"PB_Nac"], seasonal=FALSE,
stepwise=FALSE, approximation=FALSE))
fit3 <- auto.arima(tsShort[,"PB_Nac"], seasonal=FALSE,
stepwise=FALSE, approximation=FALSE)
fit3
fit3 %>% forecast(h=24) %>% autoplot(include=80)
fit2 %>% forecast(h=24) %>% autoplot(include=80)
fit %>% forecast(h=24) %>% autoplot(include=80)
fit3 %>% forecast(h=24) %>% autoplot(include=80)
#EL PRECIO SE MODELA NO SEASONAL
fit <- auto.arima(tsEE[,"PB_Nac"], seasonal=FALSE)
fit
fit %>% forecast(h=24) %>% autoplot(include=80)
fit %>% forecast(h=24) %>% autoplot(include=10)
fit %>% forecast(h=24) %>% autoplot(include=100)
fit3 %>% forecast(h=24) %>% autoplot(include=80)
tsSeasonal %>%
Arima(order=c(0,1,1), seasonal=c(0,1,1)) %>%
residuals() %>% ggtsdisplay()
fit3 <- Arima(tsSeasonal, order=c(0,1,3), seasonal=c(0,1,1))
checkresiduals(fit3)
fit3 %>% forecast(h=48) %>% autoplot()
fit3 %>% forecast(h=48) %>% autoplot(include=124)
24*7
fit3 %>% forecast(h=168) %>% autoplot(include=124)
