labs(title = "Demand of energy hourly[kWh]", x = "", y = "Energy [kWh]", color = "Legend Title\n")+ scale_y_continuous(  labels = scales::number_format( big.mark = ','))
ggplot(data=Seasonal,aes(x=DateTime, y=PB_Nac)) +
geom_path(colour="#009E73",,size=1.2) +
labs(title = "Demand of energy hourly[kWh]", x = "", y = "Energy [kWh]", color = "Legend Title\n")+ scale_y_continuous(  labels = scales::number_format( big.mark = ','))
ggplot(data=LongTime,aes(x=DateTime, y=PB_Nac)) +
geom_path(colour="#009E73",,size=0.5) +
labs(title = "Demand of energy hourly[kWh]", x = "", y = "Energy [kWh]", color = "Legend Title\n")+ scale_y_continuous(  labels = scales::number_format( big.mark = ','))
View(dfEE)
dfEE$Oferta <- dfEE$COGENERADOR + dfEE$EOLICA + dfEE$HIDRAULICA + dfEE$TERMICA + dfEE$SOLAR
View(dfEE)
dfEE <- dfEE %>%
mutate(SOLAR = coalesce(SOLAR, 0),
EOLICA = coalesce(EOLICA, 0))
View(dfEE)
dfEE$Oferta <- dfEE$COGENERADOR + dfEE$EOLICA + dfEE$HIDRAULICA + dfEE$TERMICA + dfEE$SOLAR
View(dfEE)
#Se eliminan todos los Dataframes del ambiente Global de desarrollo
rm(list=ls())
#Se eliminan todos los Dataframes del ambiente Global de desarrollo
rm(list=ls())
#Incluir librerias y paquetes
library(readxl)
library(reshape2)
library(lubridate)
library(plyr)
library(dplyr)
library(ggplot2)
library("GGally")
library(ggfortify)
library("lubridate")
require(xts)
library(scales)
#Establecer un directorio de trabajo
setwd("C:/Users/sebas/Documents/2021-20/BUSINESS ECONOMIC AND FINANCIAL DATA/BEFD Scripts/Data Merge")
dfEE <- read.csv("EE2.csv")
#Graficas
rm(Demanda)
dfEE$date <- as.Date(dfEE$Fecha)
dfEE <- dfEE %>%
mutate(SOLAR = coalesce(SOLAR, 0),
EOLICA = coalesce(EOLICA, 0))
dfEE$ANTIOQUIAkWh <- NULL
dfEE$ANTIOQUIAMm3 <- NULL
dfEE$CARIBEkWh <- NULL
dfEE$CARIBEMm3 <- NULL
dfEE$CENTROkWh <- NULL
dfEE$CENTROMm3 <- NULL
dfEE$ORIENTEkWh <- NULL
dfEE$ORIENTEMm3 <- NULL
dfEE$VALLEkWh <- NULL
dfEE$VALLEMm3 <- NULL
dfEE$ANTIOQUIAM3 <- dfEE$ANTIOQUIAM3/24
dfEE$CARIBEM3 <- dfEE$CARIBEM3/24
dfEE$CENTROM3 <- dfEE$CENTROM3/24
dfEE$ORIENTEM3 <- dfEE$ORIENTEM3/24
dfEE$VALLEM3 <- dfEE$VALLEM3/24
dfEE$APORTESM3 <- dfEE$ANTIOQUIAM3+dfEE$CARIBEM3+dfEE$CENTROM3+dfEE$ORIENTEM3+dfEE$VALLEM3
dfEE$Oferta <- dfEE$COGENERADOR + dfEE$EOLICA + dfEE$HIDRAULICA + dfEE$TERMICA + dfEE$SOLAR
dfEE$Hour <- ifelse(nchar(substring(dfEE$FH, first = 12))<2,paste("0",substring(dfEE$FH, first = 12),":00", sep = "") , paste(substring(dfEE$FH, first = 12),":00", sep = ""))
dfEE$DateTime <- paste(dfEE$Fecha,dfEE$Hour)
dfEE$DateTime = as.POSIXct(strptime(dfEE$DateTime, format ="%Y-%m-%d %H:%M"))
dfEE$DateTime = as.POSIXct(strptime(dfEE$DateTime, format ="%Y-%m-%d %H:%M"))
firstHour <- 24*(as.Date("2003-1-1 00:00:00")-as.Date("2003-1-1 00:00:00"))
tsEE <- ts(dfEE,start=c(2003,firstHour),frequency=24*365)
sdts = xts(dfEE, order.by = dfEE$DateTime)
# Subset training
Seasonal =  subset(dfEE, DateTime> "2020-12-1 00:00:00" & date < "2020-12-15 00:00:00")
LongTime =  subset(dfEE, DateTime> "2019-1-1 00:00:00" & date < "2020-12-15 00:00:00")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Seasonal$Demanda, colour = "Precio Bolsa"),size=0.8)+
geom_line(aes(y = Seasonal$Oferta ,colour = "Energía Hidráulica"),size=0.5)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Correlación Energía Hidráulica y Precio Bolsa", x = "Tiempo [Mes Año]",y ="")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Demanda, colour = "Precio Bolsa"),size=0.8)+
geom_line(aes(y = Oferta ,colour = "Energía Hidráulica"),size=0.5)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Correlación Energía Hidráulica y Precio Bolsa", x = "Tiempo [Mes Año]",y ="")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Demanda, colour = "Perra"),size=0.8)+
geom_line(aes(y = Oferta ,colour = "Energía Hidráulica"),size=0.5)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Correlación Energía Hidráulica y Precio Bolsa", x = "Tiempo [Mes Año]",y ="")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Demanda, colour = "Demand"),size=1.2)+
geom_line(aes(y = Oferta ,colour = "Offer"),size=0.5)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Correlación Energía Hidráulica y Precio Bolsa", x = "Tiempo [Mes Año]",y ="")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Demanda, colour = "Demand"),size=1.2)+
geom_line(aes(y = Oferta ,colour = "Offer"),size=1)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Correlación Energía Hidráulica y Precio Bolsa", x = "Tiempo [Mes Año]",y ="")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Demanda, colour = "Demand"),size=1.2)+
geom_line(aes(y = Oferta ,colour = "Offer"),size=0.8)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Correlación Energía Hidráulica y Precio Bolsa", x = "Tiempo [Mes Año]",y ="")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Demanda, colour = "Demand"),size=1.2)+
geom_line(aes(y = Oferta ,colour = "Offer"),size=0.8)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Demand of energy hourly[kWh]", y = "Energy [kWh]")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Demanda, colour = "Demand"),size=1.2)+
geom_line(aes(y = Oferta ,colour = "Offer"),size=0.8)+
geom_line(aes(y = EOLICA, colour = "Eolica"),size=1.2)+
geom_line(aes(y = HIDRAULICA ,colour = "HIDRAULICA"),size=0.8)+
geom_line(aes(y = TERMICA, colour = "TERMICA"),size=1.2)+
geom_line(aes(y = SOLAR ,colour = "SOLAR"),size=0.8)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Demand of energy hourly[kWh]", y = "Energy [kWh]")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Demanda, colour = "Demand"),size=1.2)+
geom_line(aes(y = Oferta ,colour = "Offer"),size=0.8)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Demand of energy hourly[kWh]", y = "Energy [kWh]")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Oferta ,colour = "Offer"),size=0.8)+
geom_line(aes(y = EOLICA, colour = "Eolica"),size=1.2)+
geom_line(aes(y = HIDRAULICA ,colour = "HIDRAULICA"),size=0.8)+
geom_line(aes(y = TERMICA, colour = "TERMICA"),size=1.2)+
geom_line(aes(y = SOLAR ,colour = "SOLAR"),size=0.8)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Demand of energy hourly[kWh]", y = "Energy [kWh]")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Oferta ,colour = "Offer"),size=0.8)+
geom_line(aes(y = EOLICA, colour = "EOLIC"),size=1.2)+
geom_line(aes(y = HIDRAULICA ,colour = "HYDROELECTRIC"),size=0.8)+
geom_line(aes(y = TERMICA, colour = "TERMIC"),size=1.2)+
geom_line(aes(y = SOLAR ,colour = "SOLAR"),size=0.8)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Sources of energy hourly[kWh]", y = "Energy [kWh]")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Oferta ,colour = "OFFER"),size=0.8)+
geom_line(aes(y = EOLICA, colour = "EOLIC"),size=1.2)+
geom_line(aes(y = HIDRAULICA ,colour = "HYDROELECTRIC"),size=0.8)+
geom_line(aes(y = TERMICA, colour = "TERMIC"),size=1.2)+
geom_line(aes(y = SOLAR ,colour = "SOLAR"),size=0.8)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Sources of energy hourly[kWh]", y = "Energy [kWh]")
ggplot(data=Seasonal,aes(x=DateTime, y=Demanda)) +
geom_path(colour="#009E73",size=1.2) +
labs(title = "Demand of energy hourly[kWh]", x = "", y = "Energy [kWh]", color = "Legend Title\n")+ scale_y_continuous(  labels = scales::number_format( big.mark = ','))
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Oferta ,colour = "OFFER"),size=0.8)+
geom_line(aes(y = EOLICA, colour = "EOLIC"),size=1)+
geom_line(aes(y = HIDRAULICA ,colour = "HYDROELECTRIC"),size=1)+
geom_line(aes(y = TERMICA, colour = "TERMIC"),size=1)+
geom_line(aes(y = SOLAR ,colour = "SOLAR"),size=1)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Sources of energy hourly[kWh]", y = "Energy [kWh]")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Oferta ,colour = "OFFER"),size=1)+
geom_line(aes(y = EOLICA, colour = "EOLIC"),size=1)+
geom_line(aes(y = HIDRAULICA ,colour = "HYDROELECTRIC"),size=1)+
geom_line(aes(y = TERMICA, colour = "TERMIC"),size=1)+
geom_line(aes(y = SOLAR ,colour = "SOLAR"),size=1)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Sources of energy hourly[kWh]", y = "Energy [kWh]")
ggplot(data=LongTime,aes(x=DateTime, y=PB_Nac)) +
geom_path(colour="#009E73",size=0.5) +
labs(title = "Demand of energy hourly[kWh]", x = "", y = "Energy [kWh]", color = "Legend Title\n")+ scale_y_continuous(  labels = scales::number_format( big.mark = ','))
ggplot(data=LongTime,aes(x=DateTime, y=PB_Nac)) +
geom_path(colour="#009E73",size=0.5) +
labs(title = "Price of the energy [$/kWh]", x = "", y = "Energy [kWh]", color = "Legend Title\n")+ scale_y_continuous(  labels = scales::number_format( big.mark = ','))
ggplot(data=LongTime,aes(x=DateTime, y=PB_Nac)) +
geom_path(colour="#009E73",size=0.5) +
labs(title = "Price of the energy [$/kWh]", x = "", y = "Price [$/kwh]", color = "Legend Title\n")+ scale_y_continuous(  labels = scales::number_format( big.mark = ','))
# Subset training
Seasonal =  subset(dfEE, DateTime> "2020-12-1 00:00:00" & date < "2020-12-30 00:00:00")
LongTime =  subset(dfEE, DateTime> "2019-1-1 00:00:00" & date < "2020-12-15 00:00:00")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Demanda, colour = "Demand"),size=1.2)+
geom_line(aes(y = Oferta ,colour = "Offer"),size=0.8)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Demand of energy hourly[kWh]", y = "Energy [kWh]")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Oferta ,colour = "OFFER"),size=1)+
geom_line(aes(y = EOLICA, colour = "EOLIC"),size=1)+
geom_line(aes(y = HIDRAULICA ,colour = "HYDROELECTRIC"),size=1)+
geom_line(aes(y = TERMICA, colour = "TERMIC"),size=1)+
geom_line(aes(y = SOLAR ,colour = "SOLAR"),size=1)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Sources of energy hourly[kWh]", y = "Energy [kWh]")
LongTime =  subset(dfEE, DateTime> "2019-1-1 00:00:00" & date < "2020-12-30 00:00:00")
ggseasonplot(LongTime$Oferta)
forecast::ggseasonplot(x = as.ts(LongTime))
forecast::ggseasonplot(x = LongTime)
library(fpp2)
install.packages("fpp2")
library(fpp2)
forecast::ggseasonplot(x = LongTime)
library(fpp2)
forecast::ggseasonplot(x = LongTime)
ggseasonplot(a10, polar = TRUE)
ggseasonplot(LongTime, polar = TRUE)
ggseasonplot(tsEE, polar = TRUE)
ggseasonplot(tsEE)
autoplot(elecdemand[,c("Demand","Temperature")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
ggtitle("Half-hourly electricity demand: Victoria, Australia")
elecdemand[,c("Demand","Temperature")]
autoplot(tsEE[,c("Demanda","PB_Nac")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
ggtitle("Half-hourly electricity demand: Victoria, Australia")
autoplot(tsEE[,c("PB_Nac","Demanda")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
ggtitle("Half-hourly electricity demand: Victoria, Australia")
firstHour <- 24*(as.Date("20010-1-1 00:00:00")-as.Date("2010-1-1 00:00:00"))
tsEE <- ts(dfEE,start=c(2010,firstHour),frequency=24*365)
autoplot(tsEE[,c("PB_Nac","Demanda")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
ggtitle("Half-hourly electricity demand: Victoria, Australia")
tsEE <- ts(dfEE,start=c(2013,firstHour),frequency=24*365)
autoplot(tsEE[,c("PB_Nac","Demanda")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
ggtitle("Half-hourly electricity demand: Victoria, Australia")
tsEE <- ts(dfEE,start=c(2015,firstHour),frequency=24*365)
autoplot(tsEE[,c("PB_Nac","Demanda")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
ggtitle("Half-hourly electricity demand: Victoria, Australia")
firstHour <- 24*(as.Date("2003-1-1 00:00:00")-as.Date("2003-1-1 00:00:00"))
tsEE <- ts(dfEE,start=c(2003,firstHour),frequency=24*365)
tsShort <- window(tsEE, 2020)
autoplot(tsShort[,c("PB_Nac","Demanda")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
ggtitle("Half-hourly electricity demand: Victoria, Australia")
tsShort <- window(tsEE, 2015)
autoplot(tsShort[,c("PB_Nac","Demanda")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
ggtitle("Half-hourly electricity demand: Victoria, Australia")
tsShort <- window(tsEE, 2013)
autoplot(tsShort[,c("PB_Nac","Demanda")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
ggtitle("Half-hourly electricity demand: Victoria, Australia")
tsShort <- window(tsEE, 2010)
autoplot(tsShort[,c("PB_Nac","Demanda")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
ggtitle("Half-hourly electricity demand: Victoria, Australia")
tsShort <- window(tsEE, 2015)
autoplot(tsShort[,c("PB_Nac","Demanda")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
ggtitle("Half-hourly electricity demand: Victoria, Australia")
autoplot(tsShort[,c("PB_Nac","TERMICA","Demanda")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
ggtitle("Half-hourly electricity demand: Victoria, Australia")
autoplot(tsShort[,c("PB_Nac","TERMICA","HIDRAULICA","Demanda")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
ggtitle("Half-hourly electricity demand: Victoria, Australia")
autoplot(tsShort[,c("PB_Nac","TERMICA","HIDRAULICA","Demanda")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
scale_y_continuous(  labels = scales::number_format( big.mark = ','))+
ggtitle("Half-hourly electricity demand: Victoria, Australia")
tsShort <- window(tsEE, 2015,2018)
autoplot(tsShort[,c("PB_Nac","TERMICA","HIDRAULICA","Demanda")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
scale_y_continuous(  labels = scales::number_format( big.mark = ','))+
ggtitle("Half-hourly electricity demand: Victoria, Australia")
autoplot(tsShort[,c("PB_Nac","TERMICA","HIDRAULICA")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
scale_y_continuous(  labels = scales::number_format( big.mark = ','))+
ggtitle("Half-hourly electricity demand: Victoria, Australia")
View(dfEE)
#Se eliminan todos los Dataframes del ambiente Global de desarrollo
rm(list=ls())
#Incluir librerias y paquetes
library(readxl)
library(reshape2)
library(lubridate)
library(plyr)
library(dplyr)
library(ggplot2)
library("GGally")
library(ggfortify)
library("lubridate")
require(xts)
library(scales)
library(fpp2)
#Establecer un directorio de trabajo
setwd("C:/Users/sebas/Documents/2021-20/BUSINESS ECONOMIC AND FINANCIAL DATA/BEFD Scripts/Data Merge")
dfEE <- read.csv("EE2.csv")
#Graficas
rm(Demanda)
dfEE$date <- as.Date(dfEE$Fecha)
dfEE <- dfEE %>%
mutate(SOLAR = coalesce(SOLAR, 0),
EOLICA = coalesce(EOLICA, 0))
dfEE$ANTIOQUIAMm3 <- dfEE$ANTIOQUIAMm3/24
dfEE$CARIBEMm3 <- dfEE$CARIBEMm3/24
dfEE$CENTROMm3 <- dfEE$CENTROMm3/24
dfEE$ORIENTEMm3 <- dfEE$ORIENTEMm3/24
dfEE$VALLEMm3 <- dfEE$VALLEMm3/24
dfEE$ReservasM3 <- dfEE$ANTIOQUIAMm3+dfEE$CARIBEMm3+dfEE$CENTROMm3+dfEE$ORIENTEMm3+dfEE$VALLEMm3
dfEE$ANTIOQUIAM3 <- dfEE$ANTIOQUIAM3/24
dfEE$CARIBEM3 <- dfEE$CARIBEM3/24
dfEE$CENTROM3 <- dfEE$CENTROM3/24
dfEE$ORIENTEM3 <- dfEE$ORIENTEM3/24
dfEE$VALLEM3 <- dfEE$VALLEM3/24
dfEE$APORTESM3 <- dfEE$ANTIOQUIAM3+dfEE$CARIBEM3+dfEE$CENTROM3+dfEE$ORIENTEM3+dfEE$VALLEM3
dfEE$ANTIOQUIAkWh <- NULL
dfEE$ANTIOQUIAMm3 <- NULL
dfEE$CARIBEkWh <- NULL
dfEE$CARIBEMm3 <- NULL
dfEE$CENTROkWh <- NULL
dfEE$CENTROMm3 <- NULL
dfEE$ORIENTEkWh <- NULL
dfEE$ORIENTEMm3 <- NULL
dfEE$VALLEkWh <- NULL
dfEE$VALLEMm3 <- NULL
dfEE$ANTIOQUIAM3 <- NULL
dfEE$CARIBEM3 <- NULL
dfEE$CENTROM3 <- NULL
dfEE$ORIENTEM3 <- NULL
dfEE$VALLEM3 <- NULL
dfEE$Oferta <- dfEE$COGENERADOR + dfEE$EOLICA + dfEE$HIDRAULICA + dfEE$TERMICA + dfEE$SOLAR
dfEE$Hour <- ifelse(nchar(substring(dfEE$FH, first = 12))<2,paste("0",substring(dfEE$FH, first = 12),":00", sep = "") , paste(substring(dfEE$FH, first = 12),":00", sep = ""))
dfEE$DateTime <- paste(dfEE$Fecha,dfEE$Hour)
dfEE$DateTime = as.POSIXct(strptime(dfEE$DateTime, format ="%Y-%m-%d %H:%M"))
dfEE$DateTime = as.POSIXct(strptime(dfEE$DateTime, format ="%Y-%m-%d %H:%M"))
firstHour <- 24*(as.Date("2003-1-1 00:00:00")-as.Date("2003-1-1 00:00:00"))
tsEE <- ts(dfEE,start=c(2003,firstHour),frequency=24*365)
tsShort <- window(tsEE, 2015,2018)
#sdts = xts(dfEE, order.by = dfEE$DateTime)
# Subset training
Seasonal =  subset(dfEE, DateTime> "2020-12-1 00:00:00" & date < "2020-12-30 00:00:00")
LongTime =  subset(dfEE, DateTime> "2019-1-1 00:00:00" & date < "2020-12-30 00:00:00")
rm(list=ls())
#Incluir librerias y paquetes
library(readxl)
library(reshape2)
library(lubridate)
library(plyr)
library(dplyr)
library(ggplot2)
library("GGally")
library(ggfortify)
library("lubridate")
require(xts)
library(scales)
library(fpp2)
#Establecer un directorio de trabajo
setwd("C:/Users/sebas/Documents/2021-20/BUSINESS ECONOMIC AND FINANCIAL DATA/BEFD Scripts/Data Merge")
dfEE <- read.csv("EE2.csv")
#Graficas
dfEE$ANTIOQUIAMm3 <- dfEE$ANTIOQUIAMm3/24
dfEE$CARIBEMm3 <- dfEE$CARIBEMm3/24
dfEE$CENTROMm3 <- dfEE$CENTROMm3/24
dfEE$ORIENTEMm3 <- dfEE$ORIENTEMm3/24
dfEE$VALLEMm3 <- dfEE$VALLEMm3/24
dfEE$ReservasM3 <- dfEE$ANTIOQUIAMm3+dfEE$CARIBEMm3+dfEE$CENTROMm3+dfEE$ORIENTEMm3+dfEE$VALLEMm3
dfEE$ANTIOQUIAM3 <- dfEE$ANTIOQUIAM3/24
dfEE$CARIBEM3 <- dfEE$CARIBEM3/24
dfEE$CENTROM3 <- dfEE$CENTROM3/24
dfEE$ORIENTEM3 <- dfEE$ORIENTEM3/24
dfEE$VALLEM3 <- dfEE$VALLEM3/24
dfEE$APORTESM3 <- dfEE$ANTIOQUIAM3+dfEE$CARIBEM3+dfEE$CENTROM3+dfEE$ORIENTEM3+dfEE$VALLEM3
dfEE$ANTIOQUIAkWh <- NULL
dfEE$ANTIOQUIAMm3 <- NULL
dfEE$CARIBEkWh <- NULL
dfEE$CARIBEMm3 <- NULL
dfEE$CENTROkWh <- NULL
dfEE$CENTROMm3 <- NULL
dfEE$ORIENTEkWh <- NULL
dfEE$ORIENTEMm3 <- NULL
dfEE$VALLEkWh <- NULL
dfEE$VALLEMm3 <- NULL
dfEE$ANTIOQUIAM3 <- NULL
dfEE$CARIBEM3 <- NULL
dfEE$CENTROM3 <- NULL
dfEE$ORIENTEM3 <- NULL
dfEE$VALLEM3 <- NULL
dfEE$Oferta <- dfEE$COGENERADOR + dfEE$EOLICA + dfEE$HIDRAULICA + dfEE$TERMICA + dfEE$SOLAR
dfEE$Hour <- ifelse(nchar(substring(dfEE$FH, first = 12))<2,paste("0",substring(dfEE$FH, first = 12),":00", sep = "") , paste(substring(dfEE$FH, first = 12),":00", sep = ""))
dfEE$DateTime <- paste(dfEE$Fecha,dfEE$Hour)
dfEE$DateTime = as.POSIXct(strptime(dfEE$DateTime, format ="%Y-%m-%d %H:%M"))
dfEE$DateTime = as.POSIXct(strptime(dfEE$DateTime, format ="%Y-%m-%d %H:%M"))
firstHour <- 24*(as.Date("2003-1-1 00:00:00")-as.Date("2003-1-1 00:00:00"))
tsEE <- ts(dfEE,start=c(2003,firstHour),frequency=24*365)
tsShort <- window(tsEE, 2015,2018)
#sdts = xts(dfEE, order.by = dfEE$DateTime)
# Subset training
Seasonal =  subset(dfEE, DateTime> "2020-12-1 00:00:00" & date < "2020-12-30 00:00:00")
LongTime =  subset(dfEE, DateTime> "2019-1-1 00:00:00" & date < "2020-12-30 00:00:00")
rm(list=ls())
#Incluir librerias y paquetes
library(readxl)
library(reshape2)
library(lubridate)
library(plyr)
library(dplyr)
library(ggplot2)
library("GGally")
library(ggfortify)
library("lubridate")
require(xts)
library(scales)
library(fpp2)
#Establecer un directorio de trabajo
setwd("C:/Users/sebas/Documents/2021-20/BUSINESS ECONOMIC AND FINANCIAL DATA/BEFD Scripts/Data Merge")
dfEE <- read.csv("EE2.csv")
#Graficas
dfEE$date <- as.Date(dfEE$Fecha)
dfEE <- dfEE %>%
mutate(SOLAR = coalesce(SOLAR, 0),
EOLICA = coalesce(EOLICA, 0))
dfEE$ANTIOQUIAMm3 <- dfEE$ANTIOQUIAMm3/24
dfEE$CARIBEMm3 <- dfEE$CARIBEMm3/24
dfEE$CENTROMm3 <- dfEE$CENTROMm3/24
dfEE$ORIENTEMm3 <- dfEE$ORIENTEMm3/24
dfEE$VALLEMm3 <- dfEE$VALLEMm3/24
dfEE$ReservasM3 <- dfEE$ANTIOQUIAMm3+dfEE$CARIBEMm3+dfEE$CENTROMm3+dfEE$ORIENTEMm3+dfEE$VALLEMm3
dfEE$ANTIOQUIAM3 <- dfEE$ANTIOQUIAM3/24
dfEE$CARIBEM3 <- dfEE$CARIBEM3/24
dfEE$CENTROM3 <- dfEE$CENTROM3/24
dfEE$ORIENTEM3 <- dfEE$ORIENTEM3/24
dfEE$VALLEM3 <- dfEE$VALLEM3/24
dfEE$APORTESM3 <- dfEE$ANTIOQUIAM3+dfEE$CARIBEM3+dfEE$CENTROM3+dfEE$ORIENTEM3+dfEE$VALLEM3
dfEE$ANTIOQUIAkWh <- NULL
dfEE$ANTIOQUIAMm3 <- NULL
dfEE$CARIBEkWh <- NULL
dfEE$CARIBEMm3 <- NULL
dfEE$CENTROkWh <- NULL
dfEE$CENTROMm3 <- NULL
dfEE$ORIENTEkWh <- NULL
dfEE$ORIENTEMm3 <- NULL
dfEE$VALLEkWh <- NULL
dfEE$VALLEMm3 <- NULL
dfEE$ANTIOQUIAM3 <- NULL
dfEE$CARIBEM3 <- NULL
dfEE$CENTROM3 <- NULL
dfEE$ORIENTEM3 <- NULL
dfEE$VALLEM3 <- NULL
dfEE$Oferta <- dfEE$COGENERADOR + dfEE$EOLICA + dfEE$HIDRAULICA + dfEE$TERMICA + dfEE$SOLAR
dfEE$Hour <- ifelse(nchar(substring(dfEE$FH, first = 12))<2,paste("0",substring(dfEE$FH, first = 12),":00", sep = "") , paste(substring(dfEE$FH, first = 12),":00", sep = ""))
dfEE$DateTime <- paste(dfEE$Fecha,dfEE$Hour)
dfEE$DateTime = as.POSIXct(strptime(dfEE$DateTime, format ="%Y-%m-%d %H:%M"))
dfEE$DateTime = as.POSIXct(strptime(dfEE$DateTime, format ="%Y-%m-%d %H:%M"))
firstHour <- 24*(as.Date("2003-1-1 00:00:00")-as.Date("2003-1-1 00:00:00"))
tsEE <- ts(dfEE,start=c(2003,firstHour),frequency=24*365)
tsShort <- window(tsEE, 2015,2018)
#sdts = xts(dfEE, order.by = dfEE$DateTime)
# Subset training
Seasonal =  subset(dfEE, DateTime> "2020-12-1 00:00:00" & date < "2020-12-30 00:00:00")
LongTime =  subset(dfEE, DateTime> "2019-1-1 00:00:00" & date < "2020-12-30 00:00:00")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Demanda, colour = "Demand"),size=1.2)+
geom_line(aes(y = Oferta ,colour = "Offer"),size=0.8)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Demand of energy hourly[kWh]", y = "Energy [kWh]")
ggplot(Seasonal, aes(DateTime))+
geom_line(aes(y = Oferta ,colour = "OFFER"),size=1)+
geom_line(aes(y = EOLICA, colour = "EOLIC"),size=1)+
geom_line(aes(y = HIDRAULICA ,colour = "HYDROELECTRIC"),size=1)+
geom_line(aes(y = TERMICA, colour = "TERMIC"),size=1)+
geom_line(aes(y = SOLAR ,colour = "SOLAR"),size=1)+
scale_y_continuous(  labels = scales::number_format( big.mark = ',')) +
labs(title = "Offer and Sources of energy hourly[kWh]", y = "Energy [kWh]")
ggplot(data=LongTime,aes(x=DateTime, y=PB_Nac)) +
geom_path(colour="#009E73",size=0.5) +
labs(title = "Price of the energy [$/kWh]", x = "", y = "Price [$/kwh]", color = "Legend Title\n")+ scale_y_continuous(  labels = scales::number_format( big.mark = ','))
autoplot(tsShort[,c("PB_Nac","TERMICA","HIDRAULICA")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
scale_y_continuous(  labels = scales::number_format( big.mark = ','))+
ggtitle("Half-hourly electricity demand: Victoria, Australia")
View(Seasonal)
autoplot(tsShort[,c("PB_Nac","TERMICA","ReservasM3")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
scale_y_continuous(  labels = scales::number_format( big.mark = ','))+
ggtitle("Half-hourly electricity demand: Victoria, Australia")
View(dfEE)
View(dfEE)
autoplot(tsShort[,c("PB_Nac","TERMICA","ReservasM3","APORTESM3")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
scale_y_continuous(  labels = scales::number_format( big.mark = ','))+
ggtitle("Half-hourly electricity demand: Victoria, Australia")
View(Seasonal)
autoplot(tsEE[,c("PB_Nac","TERMICA","ReservasM3","APORTESM3")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
scale_y_continuous(  labels = scales::number_format( big.mark = ','))+
ggtitle("Half-hourly electricity demand: Victoria, Australia")
autoplot(tsShort[,c("PB_Nac","TERMICA","ReservasM3","APORTESM3")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
scale_y_continuous(  labels = scales::number_format( big.mark = ','))+
ggtitle("Half-hourly electricity demand: Victoria, Australia")
View(tsShort)
View(dfEE)
tsShort <- window(tsEE, 2015,2016)
autoplot(tsShort[,c("PB_Nac","TERMICA","ReservasM3","APORTESM3")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
scale_y_continuous(  labels = scales::number_format( big.mark = ','))+
ggtitle("Price of electricity, Water Reserves, Termic production")
qplot(TERMICA, PB_Nac, data=as.data.frame(tsShort)) +
ylab("Demand (GW)") + xlab("Temperature (Celsius)")
qplot(TERMICA, PB_Nac, data=as.data.frame(tsShort)) +
ylab("Termic ENERGY[kWh]") + xlab("Price of Electricity")
qplot(TERMICA, PB_Nac, data=as.data.frame(tsShort)) +
xlab("Termic ENERGY[kWh]") + ylab("Price of Electricity")
qplot(ReservasM3, PB_Nac, data=as.data.frame(tsShort)) +
xlab("Termic ENERGY[kWh]") + ylab("Price of Electricity")
qplot(APORTESM3, PB_Nac, data=as.data.frame(tsShort)) +
xlab("Aportes[m3]") + ylab("Price of Electricity")
GGally::ggpairs(as.data.frame(tsShort[,c("PB_Nac","TERMICA","ReservasM3","APORTESM3")]))
GGally::ggpairs(as.data.frame(tsShort[,c("PB_Nac","TERMICA","ReservasM3","APORTESM3","HIDRAULICA")]))
#AUTOCORRELATION
ggAcf(beer2)
#AUTOCORRELATION
ggAcf(tsShort[,"PB_Nac"])
ggAcf(tsShort[,"Demanda"], lag=48)
ggAcf(tsShort[,"Demanda"], lag=200)
ggAcf(tsShort[,"Demanda"], lag=1)
ggAcf(tsShort[,"Demanda"], lag=24)
